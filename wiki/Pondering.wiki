#summary What to do when the opponent is on move.
#labels Phase-Design,Phase-Implementation

Some terminology:  _Thinking_ is what a chess engine does when it's on move.  When the engine _thinks_, it generates a _principal variation_.  A _principal variation_ is a series of best moves - from the current position, the engine's best move, followed by the opponent's best response, followed by the engine's best counter-response, followed by the opponent's best counter-counter-response, and so on - to a given depth.  _Pondering_ is what the engine does when its opponent is on move.

The most intuitive approach to _pondering_ is for the engine to do exactly what it'd do if it were on move - from the current position, to generate a _principal variation_ starting with the opponent's best move.  That way, after the opponent has moved, when the engine is on move again, its transposition table will already be filled with many useful evaluations and it'll search through the first few plies very quickly.

Bruce Moreland (of [http://www.seanet.com/~brucemo/chess.htm Gerbil and Ferret] fame) suggests a [http://www.seanet.com/~brucemo/topics/pondering.htm better way].