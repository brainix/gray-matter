#summary Epic headache: porting to Windows.

= Introduction =

I've given up on using MinGW to cross-compile from Linux to Win32.  This is mainly because MinGW doesn't support Pthreads.  "Luckily," there's an [http://sourceware.org/pthreads-win32/ open source Pthreads implementation for Win32].  I've successfully used it with Dev-C++ on a Win32 box to resolve that issue.  Now for the nasty:

= Details =

~~*uint64_t*:  Win32 doesn't include this type by default, so we need an #ifdef in types.h, if uint64_t isn't defined, to #include <stdint.h>.~~

*Update*:  We've just included stdint.h no matter what.  Most likely, it's implicitly included under Linux, and that's why that type is defined under Linux, so explicitly including it shouldn't hurt anything.

~~*class search*:  There's a not-so-obvious recursive dependency with respect to 'class search' and 'class xboard' - they each depend on the other's declaration.  I started with a simple forward declaration of 'class search' in xboard.h, but that didn't resolve the issue.  Then, instead of including everything in gray.h, I completely re-hauled the include system to be more "parallel," and this actually worked.  Before you get the tar and feathers, I decided I'd changed too much, so I'm back with the original layout and dependency problem.  Why on earth this doesn't occur on Linux is beyond me.  I think we need to put all the classes in a "namespace gray", because this might be caused by generic naming of classes.  "class search" isn't exactly unique.~~

*Update*:  We've gone with Doug's re-haul but omitted the new namespace idea.  It seems to work beautifully.  Oh, we've also tarred and feathered Doug.

*More Issues*?  I haven't yet resolved the recursive dependency issue, so who knows what else must be done to port to Windows?  ;-)